#include <stdio.h>
#include <sys/time.h>
#include <sys/resource.h>

void quickSort(int arr[], int low, int high);
int partition(int arr[], int low, int high);

int main() {
    struct timeval tv1, tv2;
    int size, input[50], i;
    struct rusage r_usage;

    printf("Enter the input size: ");
    scanf("%d", &size);
    printf("Enter the array elements:\n");
    for (i = 0; i < size; i++) {
        scanf("%d", &input[i]);
    }

    gettimeofday(&tv1, NULL);
    quickSort(input, 0, size - 1);
    gettimeofday(&tv2, NULL);

    printf("\nSorted array is:\n");
    for (i = 0; i < size; i++) {
        printf("%d\t", input[i]);
    }

    printf("Time of Quick Sort = %f microseconds", (double)(tv2.tv_usec - tv1.tv_usec));
    
    getrusage(RUSAGE_SELF, &r_usage);
    printf("Memory usage: %ld kilobytes\n", r_usage.ru_maxrss);
    
    return 0;
}

void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = (low - 1);
    for (int j = low; j <= high - 1; j++) {
        if (arr[j] < pivot) {
            i++;
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
        }
    }
    int temp = arr[i + 1];
    arr[i + 1] = arr[high];
    arr[high] = temp;
    return (i + 1);
}
